{"version":3,"sources":["webpack:///./src/components/alphabetSlider.js","webpack:///./src/pages/lexicon.js"],"names":["chars","props","scrolled","useScroll","style","AlphabethSliderStyle","container","className","map","char","key","href","toLowerCase","Template","html","data","markdownRemark","LexiconStyle","lexiconContainer","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"4JAIMA,EAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAG7H,WAACC,GAEd,IAAMC,EAAWC,cAEbC,EAAQC,IAAqBC,UAEjC,OADAF,GAAUF,EAAW,IAAMG,IAAqBH,SAAW,GAEzD,yBAAKK,UAAWH,GACbJ,EAAMQ,KAAI,SAAAC,GAAI,OACb,uBAAGF,UAAWF,IAAqBI,KAAMC,IAAKD,EAAME,KAAM,IAAMF,EAAKG,eAAiBH,Q,iCCV/E,SAASI,EAAT,GAEX,IAEMC,EAFP,EADDC,KAEQC,eACAF,KACR,OACE,6BACE,kBAAC,IAAD,MACA,kBAAC,EAAD,MACA,yBAAKP,UAAU,sBACb,yBACEA,UAAWU,IAAaC,iBACxBC,wBAAyB,CAAEC,OAAQN,OAjB7C,kFAwBO,IAAMO,EAAS","file":"component---src-pages-lexicon-js-020ad99c93067475342d.js","sourcesContent":["import React from \"react\";\nimport { useScroll } from \"../common/useScroll\";\nimport AlphabethSliderStyle from \"./alphabetSlider.module.css\";\n\nconst chars = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\n\n\nexport default (props) => {\n\n  const scrolled = useScroll();\n\n  let style = AlphabethSliderStyle.container;\n  style += (scrolled ? ' ' + AlphabethSliderStyle.scrolled : '');\n  return (\n    <div className={style}>\n      {chars.map(char => (\n        <a className={AlphabethSliderStyle.char} key={char} href={'#' + char.toLowerCase()} >{char}</a>\n      ))}\n    </div>\n  )\n}","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport AlphabetSlider from \"../components/alphabetSlider\";\nimport Header from \"../components/header\";\nimport LexiconStyle from \"./lexicon.module.css\";\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds the lexicon data\n  const { html } = markdownRemark\n  return (\n    <div>\n      <Header />\n      <AlphabetSlider />\n      <div className=\"content has-slider\">\n        <div\n          className={LexiconStyle.lexiconContainer}\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    markdownRemark(frontmatter: {path: {eq: \"/lexicon\"}}) {\n      html\n    }\n  }\n`"],"sourceRoot":""}