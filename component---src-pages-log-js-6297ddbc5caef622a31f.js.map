{"version":3,"sources":["webpack:///./src/components/tag.js","webpack:///./src/components/tagList.js","webpack:///./src/components/logItem.js","webpack:///./src/components/log.js","webpack:///./src/pages/log.js"],"names":["props","className","tagStyle","container","label","tagListStyle","tags","map","tag","index","key","itemData","data","frontmatter","logItemStyle","card","onClick","openURL","path","thumbnail","thumbnailContainer","src","alt","thumbnailSource","content","date","dateFormatter","publishedOn","contentTitle","title","introText","logStyle","logContainer","item","i","node","allMarkdownRemark","edges","query"],"mappings":"6LAGe,WAACA,GAAD,OACb,yBAAKC,UAAWC,IAASC,UAAY,IAAMH,EAAMC,WAAYD,EAAMI,Q,qBCAtD,WAACJ,GAAD,OACb,yBAAKC,UAAWI,IAAaF,WAC1BH,EAAMM,KAAKC,KAAI,SAACC,EAAKC,GAAN,OACd,kBAAC,EAAD,CAAKL,MAAOI,EAAKP,UAAWI,IAAaG,IAAKE,IAAKD,SCF1C,WAACT,GACZ,IAAMW,EAAWX,EAAMY,KAAKC,YAC5B,OACI,6BAASZ,UAAWa,IAAaC,KAAMC,QAAS,kBAAMC,YAAQN,EAASO,MAAM,KACxEP,EAASQ,UACN,yBAAKlB,UAAWa,IAAaM,oBACzB,yBAAKnB,UAAWa,IAAaK,UAAWE,IAAKV,EAASQ,UAAWG,IAAI,KACpEX,EAASY,gBACN,yBAAKtB,UAAWa,IAAaS,iBAA7B,UAAsDZ,EAASY,iBAC/D,IAER,GACJ,yBAAKtB,UAAWa,IAAaU,SACzB,yBAAKvB,UAAWa,IAAaW,MAAOC,YAAcf,EAASgB,cAC3D,yBAAK1B,UAAWa,IAAac,cAAejB,EAASkB,OACrD,yBAAK5B,UAAWa,IAAagB,WAAYnB,EAASmB,WAClD,kBAAC,EAAD,CAASxB,KAAMK,EAASL,U,qBChBzB,WAACN,GAAD,OACb,yBAAKC,UAAW8B,IAASC,cAErBhC,EAAMY,KAAKL,KAAI,SAAC0B,EAAMC,GAAP,OACb,kBAAC,EAAD,CAAStB,KAAMqB,EAAKE,KAAMzB,IAAKwB,SCRvC,sCAIe,0BAAGtB,EAAH,EAAGA,KAAH,OACb,6BACE,kBAAC,IAAD,MACA,yBAAKX,UAAU,WACb,wCAGA,kBAAC,EAAD,CAAKW,KAAMA,EAAKwB,kBAAkBC,WAPzB,IAYFC,EAAK","file":"component---src-pages-log-js-6297ddbc5caef622a31f.js","sourcesContent":["import React from \"react\";\nimport tagStyle from \"./tag.module.css\";\n\nexport default (props) => (\n  <div className={tagStyle.container + ' ' + props.className}>{props.label}</div>\n);","import React from \"react\";\nimport Tag from \"./tag\";\nimport tagListStyle from \"./tagList.module.css\";\n\nexport default (props) => (\n  <div className={tagListStyle.container}>\n    {props.tags.map((tag, index) => (\n      <Tag label={tag} className={tagListStyle.tag} key={index} />\n    ))}\n  </div>\n)","import React from \"react\";\nimport { dateFormatter, openURL } from \"../utils/common.util\";\nimport logItemStyle from \"./logItem.module.css\";\nimport TagList from \"./tagList\";\n\nexport default (props) => {\n    const itemData = props.data.frontmatter;\n    return (\n        <article className={logItemStyle.card} onClick={() => openURL(itemData.path, false)}>\n            {itemData.thumbnail ? (\n                <div className={logItemStyle.thumbnailContainer}>\n                    <img className={logItemStyle.thumbnail} src={itemData.thumbnail} alt=\"\" />\n                    {itemData.thumbnailSource ? (\n                        <div className={logItemStyle.thumbnailSource}>Image: {itemData.thumbnailSource}</div>\n                    ) : \"\"}\n                </div>\n            ) : \"\"}\n            <div className={logItemStyle.content}>\n                <div className={logItemStyle.date}>{dateFormatter(itemData.publishedOn)}</div>\n                <div className={logItemStyle.contentTitle}>{itemData.title}</div>\n                <div className={logItemStyle.introText}>{itemData.introText}</div>\n                <TagList tags={itemData.tags} />\n            </div>\n        </article>\n    )\n}","import React from \"react\";\nimport LogItem from \"../components/logItem\";\nimport logStyle from \"./log.module.css\";\n\n\nexport default (props) => (\n  <div className={logStyle.logContainer}>\n    {\n      props.data.map((item, i) => (\n        <LogItem data={item.node} key={i}></LogItem>\n      ))\n    }\n  </div>\n)","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Header from \"../components/header\";\nimport Log from \"../components/log\";\n\nexport default ({ data }) => (\n  <div>\n    <Header />\n    <div className=\"content\">\n      <h2>\n        krautLOG\n      </h2>\n      <Log data={data.allMarkdownRemark.edges}></Log>\n    </div>\n  </div>\n)\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: {\n          regex: \"/\\/log/\"\n        }\n      },\n      sort: { order: DESC, fields: [frontmatter___publishedOn] }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            publishedOn\n            path\n            introText\n            thumbnail\n            thumbnailSource\n            tags\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}