{"version":3,"sources":["webpack:///./src/components/timelineItem.js","webpack:///./src/components/timeline.js","webpack:///./src/pages/timeline.js"],"names":["props","className","timelineItem","container","isFirst","first","itemClasses","icon","titleSmall","dateFormatter","Date","line","itemData","data","frontmatter","path","externalLink","interactive","id","title","replace","onClick","openURL","thumbnail","thumbnailContainer","src","alt","thumbnailSource","date","href","renderItem","timeline","map","item","i","node","key","allMarkdownRemark","edges","query"],"mappings":"oLA+Be,WAACA,GACd,IAAIC,EAAeC,IAAaC,UAAnB,IAAgCH,EAAMC,UACnD,GAAID,EAAMI,QAER,OADAH,EAAeA,EAAN,IAAmBC,IAAaG,MA9BxBC,EA+BEL,EA9BrB,yBAAKA,UAAWK,GACd,yBAAKL,UAAWC,IAAaK,MAAM,uBAAGN,UAAU,yBAChD,yBAAKA,UAAWC,IAAaM,YAAa,UAAYC,YAAc,IAAIC,OACxE,yBAAKT,UAAWC,IAAaS,QA6B7B,IAjCiBL,EAiCXM,EAAWZ,EAAMa,KAAKC,YAI5B,OAHIF,EAASG,MAAQH,EAASI,gBAC5Bf,EAAeA,EAAN,IAAmBC,IAAae,aA3B5B,SAACL,EAAUN,GAAX,OACjB,yBAAKY,GAAIN,EAASO,MAAMC,QAAQ,YAAa,KAAKA,QAAQ,QAAS,IAAKnB,UAAWK,EACjFe,QAAS,kBAAMC,YAASV,EAASG,KAAOH,EAASG,KAAOH,EAASI,cAAeJ,EAASG,QACxFH,EAASW,UACR,yBAAKtB,UAAWC,IAAasB,oBAC3B,yBAAKvB,UAAWC,IAAaqB,UAAWE,IAAKb,EAASW,UAAWG,IAAI,KACrE,yBAAKzB,UAAWC,IAAayB,iBAA7B,UAAsDf,EAASe,kBAE/D,GACJ,yBAAK1B,UAAWC,IAAaK,MAAM,uBAAGN,UAAWW,EAASL,MAAQ,iBAClE,yBAAKN,UAAWC,IAAa0B,MAAOnB,YAAcG,EAASgB,OAC3D,uBAAGC,KAAM,IAAMjB,EAASO,MAAMC,QAAQ,YAAa,KAAKA,QAAQ,QAAS,MACzE,yBAAKnB,UAAWC,IAAaiB,OAC1BP,EAASO,OAEZ,yBAAKlB,UAAWC,IAAaS,QActBmB,CAAWlB,EAAUX,I,qBCrCjB,WAACD,GAAD,OACb,yBAAKC,UAAW8B,IAAS5B,WACvB,kBAAC,EAAD,CAAcC,SAAS,IACtBJ,EAAMa,KAAKmB,KAAI,SAACC,EAAMC,GAAP,OACd,kBAAC,EAAD,CAAcrB,KAAMoB,EAAKE,KAAMC,IAAKF,SCP1C,sCAIe,0BAAGrB,EAAH,EAAGA,KAAH,OACb,6BACE,kBAAC,IAAD,MACA,yBAAKZ,UAAU,WACb,uCAEE,uBAAG4B,KAAK,yBAAyB5B,UAAU,wBAAwBkB,MAAM,sBACvE,uBAAGlB,UAAU,yBAGjB,kBAAC,EAAD,CAAUY,KAAMA,EAAKwB,kBAAkBC,WAV9B,IAeFC,EAAK","file":"component---src-pages-timeline-js-62c9b979aeec34e914ff.js","sourcesContent":["import React from \"react\";\nimport { dateFormatter, openURL } from \"../utils/common.util\";\nimport timelineItem from \"./timelineItem.module.css\";\n\nconst renderFirst = (itemClasses) => (\n  <div className={itemClasses}>\n    <div className={timelineItem.icon}><i className=\"fas fa-calendar-day\"></i></div>\n    <div className={timelineItem.titleSmall}>{'Today: ' + dateFormatter(new Date())}</div>\n    <div className={timelineItem.line}></div>\n  </div>\n)\n\nconst renderItem = (itemData, itemClasses) => (\n  <div id={itemData.title.replace(/[. ,:-]+/g, \"-\").replace(/[\"]+/g, \"\")} className={itemClasses}\n    onClick={() => openURL((itemData.path ? itemData.path : itemData.externalLink), itemData.path ? false : true)}>\n    {itemData.thumbnail ? (\n      <div className={timelineItem.thumbnailContainer}>\n        <img className={timelineItem.thumbnail} src={itemData.thumbnail} alt=\"\" />\n        <div className={timelineItem.thumbnailSource}>Image: {itemData.thumbnailSource}</div>\n      </div>\n    ) : \"\"}\n    <div className={timelineItem.icon}><i className={itemData.icon || \"fas fa-bell\"}></i></div>\n    <div className={timelineItem.date}>{dateFormatter(itemData.date)}</div>\n    <a href={\"#\" + itemData.title.replace(/[. ,:-]+/g, \"-\").replace(/[\"]+/g, \"\")}></a>\n    <div className={timelineItem.title}>\n      {itemData.title}\n    </div>\n    <div className={timelineItem.line}></div>\n  </div>\n)\n\nexport default (props) => {\n  let className = `${timelineItem.container} ${props.className}`;\n  if (props.isFirst) {\n    className = `${className} ${timelineItem.first}`;\n    return renderFirst(className);\n  } else {\n    const itemData = props.data.frontmatter;\n    if (itemData.path || itemData.externalLink) {\n      className = `${className} ${timelineItem.interactive}`;\n    }\n    return renderItem(itemData, className);\n  }\n}","import React from \"react\";\nimport TimelineItem from \"../components/timelineItem\";\nimport timeline from \"./timeline.module.css\";\n\nexport default (props) => (\n  <div className={timeline.container}>\n    <TimelineItem isFirst={true}></TimelineItem>\n    {props.data.map((item, i) => (\n      <TimelineItem data={item.node} key={i}></TimelineItem>\n    ))}\n  </div>\n)","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Header from \"../components/header\";\nimport Timeline from \"../components/timeline\";\n\nexport default ({ data }) => (\n  <div>\n    <Header />\n    <div className=\"content\">\n      <h2>\n        Timeline\n        <a href=\"/log/how-to-contribute\" className=\"timeline-contrib-info\" title=\"How to contribute?\">\n          <i className=\"fas fa-info-circle\"></i>\n        </a>\n      </h2>\n      <Timeline data={data.allMarkdownRemark.edges}></Timeline>\n    </div>\n  </div>\n)\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: {\n          regex: \"/\\/timeline/\"\n        }\n      },\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            path\n            icon\n            thumbnail\n            thumbnailSource\n            externalLink\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}